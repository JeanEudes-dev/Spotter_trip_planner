openapi: 3.0.3
info:
title: SpotterAI Trip Planner API
version: 1.0.0
description: |
REST API for SpotterAI's truck trip planning platform.
Provides endpoints for trip creation, retrieval, and route/log simulation under US Hours of Service law.
contact:
name: Jean-Eudes Assogba
url: [https://jeaneudes-dev.github.io/portfolios/](https://jeaneudes-dev.github.io/portfolios/)
email: [jeaneudes.dev@gmail.com](mailto:jeaneudes.dev@gmail.com)
servers:

* url: [http://localhost:8000/api](http://localhost:8000/api)
  paths:
  /trips/create/:
  post:
  summary: Plan a new trip
  requestBody:
  required: true
  content:
  application/json:
  schema:
  type: object
  required:
  \- current\_location
  \- pickup\_location
  \- dropoff\_location
  \- current\_cycle\_hours
  properties:
  current\_location:
  type: string
  example: Dallas, TX
  pickup\_location:
  type: string
  example: Houston, TX
  dropoff\_location:
  type: string
  example: Chicago, IL
  current\_cycle\_hours:
  type: number
  format: float
  minimum: 0
  maximum: 70
  example: 12
  responses:
  '201':
  description: Trip created successfully
  content:
  application/json:
  schema:
  \$ref: '#/components/schemas/TripRequestResponse'
  '4XX':
  description: Trip creation failed
  content:
  application/json:
  schema:
  \$ref: '#/components/schemas/ErrorResponse'

/trips/{id}/:
get:
summary: Retrieve trip details
parameters:
\- name: id
in: path
required: true
schema:
type: integer
responses:
'200':
description: Trip details
content:
application/json:
schema:
\$ref: '#/components/schemas/TripRequestResponse'

/trips/:
get:
summary: List recent trips
responses:
'200':
description: Recent trips
content:
application/json:
schema:
type: array
items:
\$ref: '#/components/schemas/TripRequestResponse'

components:
schemas:
TripRequestResponse:
type: object
properties:
id:
type: integer
created\_at:
type: string
format: date-time
updated\_at:
type: string
format: date-time
current\_location:
type: string
pickup\_location:
type: string
dropoff\_location:
type: string
current\_cycle\_hours:
type: number
format: float
distance\_miles:
type: number
estimated\_days:
type: integer
status:
type: string
error\_message:
type: string
nullable: true
stops:
type: array
items:
\$ref: '#/components/schemas/RouteStop'
logs:
type: array
items:
\$ref: '#/components/schemas/TripLog'
geometry:
type: array
items:
type: array
items:
type: number
format: float
description: Full route geometry as \[lat, lng] pairs
RouteStop:
type: object
properties:
id:
type: integer
stop\_type:
type: string
example: pickup
order:
type: integer
lat:
type: number
lng:
type: number
description:
type: string
TripLog:
type: object
properties:
id:
type: integer
date:
type: string
log\_data:
type: array
items:
\$ref: '#/components/schemas/LogSegment'
LogSegment:
type: object
properties:
status:
type: string
example: driving
start:
type: string
example: '09:30'
end:
type: string
example: '14:00'
note:
type: string
example: driving
ErrorResponse:
type: object
properties:
error:
type: object
properties:
type:
type: string
message:
type: string
user\_friendly:
type: boolean
geometry:
type: array
items:
type: array
items:
type: number
format: float
description: Geometry will be empty on error
